# schemas.py
from enum import Enum
from pydantic import BaseModel, Field
from datetime import datetime
from typing import List, Optional


class TransactionsTypeEnum(str, Enum):
    income = 'income'
    expense = 'expense'

class TransactionResponse(BaseModel):
    id: int
    sum: int
    currency: str
    type: str
    user_id: int
    created_at: datetime
    updated_at: datetime

    class Config:
        orm_mode = True

class CategoriesResponse(BaseModel):
    id: int
    name: str  # –ë—ã–ª–æ amount, –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å sum
    icon: Optional[str] = None  # –î–æ–±–∞–≤–ª—è–µ–º –≤–∞–ª—é—Ç—É
    color: str  # –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    svg:Optional[str] = None
    moded: str  # –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    type:str
    user_id: Optional[int] = None  # –ú–æ–∂–µ—Ç –±—ã—Ç—å int –∏–ª–∏ None
    created_at: datetime  # –ë—ã–ª–æ date, –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å created_at
    updated_at: datetime  # –î–æ–±–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –¥–∞—Ç—É

    class Config:
        orm_mode = True

class CreateCategori(BaseModel):
    name: str = Field(example="–ï–¥–∞")
    icon: str = Field(example="üçï")
    color: str = Field(example="#FF5733")
    svg: str = Field(example="<svg>...</svg>") 
    moded: TransactionsTypeEnum  # ‚Üê —Ç–µ–ø–µ—Ä—å —Ç–∏–ø —Å—Ç—Ä–æ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç
    class Config:
        orm_mode = True

# –ú–æ–¥–µ–ª—å –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
class UpdateCategoryRequest(BaseModel):
    name: Optional[str] = None
    icon: Optional[str] = None
    color: Optional[str] = None
    svg: Optional[str] = None
    moded: TransactionsTypeEnum  # ‚Üê —Ç–µ–ø–µ—Ä—å —Ç–∏–ø —Å—Ç—Ä–æ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç
    class Config:
        orm_mode = True
    


    
class TransactionsCategoriesEnum(str, Enum):
    # –ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è (receipts)
    SALARY = "–ó–∞—Ä–ø–ª–∞—Ç–∞"
    BUSINESS_INCOME = "–ë–∏–∑–Ω–µ—Å –¥–æ—Ö–æ–¥"
    INVESTMENTS = "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏"
    GIFTS = "–ü–æ–¥–∞—Ä–∫–∏"
    REFUNDS = "–í–æ–∑–≤—Ä–∞—Ç—ã"
    OTHER_INCOME = "–î—Ä—É–≥–∏–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è"
    
    # –†–∞—Å—Ö–æ–¥—ã (expenses)
    SUPERMARKET = "–°—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç—ã"
    HEALTH = "–ó–¥–æ—Ä–æ–≤—å–µ"
    TRANSPORT = "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç"
    ENTERTAINMENT = "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è"
    COMMUNICATION = "–°–≤—è–∑—å"
    EDUCATION = "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ"
    RENT = "–ê—Ä–µ–Ω–¥–∞"
    UTILITIES = "–ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏"
    RESTAURANTS = "–†–µ—Å—Ç–æ—Ä–∞–Ω—ã"
    CLOTHING = "–û–¥–µ–∂–¥–∞"
    TRAVEL = "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è"
    INSURANCE = "–°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ"
    TAXES = "–ù–∞–ª–æ–≥–∏"
    CHARITY = "–ë–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"
    HOUSEHOLD = "–•–æ–∑—Ç–æ–≤–∞—Ä—ã"
    PETS = "–ü–∏—Ç–æ–º—Ü—ã"
    CHILDREN = "–î–µ—Ç–∏"
    BEAUTY = "–ö—Ä–∞—Å–æ—Ç–∞"
    ELECTRONICS = "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞"
    SUBSCRIPTIONS = "–ü–æ–¥–ø–∏—Å–∫–∏"
    OTHER_EXPENSES = "–î—Ä—É–≥–∏–µ —Ä–∞—Å—Ö–æ–¥—ã"
    
class UserResponse(BaseModel):
    id: int
    apple_id: str
    tg_id: Optional[str] = None
    tg_name: Optional[str] = None
    premium: bool = False
    premium_start: Optional[datetime] = None
    premium_expiration: Optional[datetime] = None
    email: Optional[str] = None
    created_at: datetime
    updated_at: datetime
    transactions: List[TransactionResponse]  # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    user_categories: List[CategoriesResponse]

class UserCreate(BaseModel):
    apple_id: str
    tg_id: Optional[str] = None
    tg_name: Optional[str] = None
    premium: Optional[bool] = False
    email: Optional[str] = None

class Token(BaseModel):
    access_token: str
    refresh_token: str
    token_type: str
    user_data:object