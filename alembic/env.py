import os
import sys
from logging.config import fileConfig

from sqlalchemy import engine_from_config, pool
from alembic import context

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –¥–æ –ø—Ä–æ–µ–∫—Ç–∞, —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞–ª –∏–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–µ–π
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Base –∏ –º–æ–¥–µ–ª–∏
from db import Base
from models import (
    # Feature_limits,
    User,
    # Transactions,
    # Categories,
    # Accounts,
    # Limits,
    # Debts,
    # Targets,
    # RepeatOperations,
    # OperationsRepeat,
    # Project,
    # Tasks,
)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Alembic
config = context.config

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (–ø–æ alembic.ini)
if config.config_file_name is not None:
    fileConfig(config.config_file_name)

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–µ–π
target_metadata = Base.metadata


def run_migrations_offline() -> None:
    """
    –ú–∏–≥—Ä–∞—Ü–∏–∏ –≤ 'offline' —Ä–µ–∂–∏–º–µ ‚Äî –±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î.
    –ü—Ä–æ—Å—Ç–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç SQL.
    """
    url = config.get_main_option("sqlalchemy.url")
    context.configure(
        url=url,
        target_metadata=target_metadata,
        literal_binds=True,
        compare_type=True,  # üëà –≤–∞–∂–Ω–æ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∏–ø–æ–≤ –∫–æ–ª–æ–Ω–æ–∫
        dialect_opts={"paramstyle": "named"},
    )

    with context.begin_transaction():
        context.run_migrations()


def run_migrations_online() -> None:
    """
    –ú–∏–≥—Ä–∞—Ü–∏–∏ –≤ 'online' —Ä–µ–∂–∏–º–µ ‚Äî —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
    """
    connectable = engine_from_config(
        config.get_section(config.config_ini_section, {}),
        prefix="sqlalchemy.",
        poolclass=pool.NullPool,
    )

    with connectable.connect() as connection:
        context.configure(
            connection=connection,
            target_metadata=target_metadata,
            compare_type=True,  # üëà —Ç–æ–∂–µ –≤–∞–∂–Ω–æ
        )

        with context.begin_transaction():
            context.run_migrations()


# –ó–∞–ø—É—Å–∫–∞–µ–º –Ω—É–∂–Ω—ã–π —Ä–µ–∂–∏–º
if context.is_offline_mode():
    run_migrations_offline()
else:
    run_migrations_online()
